import React, { useEffect, useMemo, useRef, useState } from "react";
import styles from "./Extra.module.css";
export default function Extra() {
  const [counter, setCounter] = useState(0);
  // // useRef................................
  // // انا بدي اعرف كم مره هروح ارندر الكلام هاد كم مره الريتيرن هيتكرر
  // // لما اعمل ابديت للستيت عندي الريندر بيرجع بيشتغل
  // // بدي اعرف كم عدد مرات كول للريندر هاد
  // // لو بدي اعد بأستخدام اليوذ ستيت هدخل في انفن لوب

  // // useRef هو الوحيد الي هيفيدني في معرفة عدد الريندر
  // let render=useRef(0);
  // console.log(render);
  // // دايما اليوذ ريف في جواها اوبجكت جواها بروبرتي اسمها كرنت بتاخد الانشيل فاليو
  // // اليوذ ريف ميزة حوه ما بترجع للانشيل فاليو بعد ما يتعمللها ريندر
  // // بتحتفظ بالفاليو تاعتها زي اليوذ ستيت بالزبط
  // // لانها هيا هوك بحتفظ بالفاليو بتاعتها كل ما بعمل ري ريندر بتعجدل قيمته
  // // كل ما بعدل وبزود وبغير فاشي باليو اي بترجع تشتغل اليوذ ايفيكت واليوذ ريف بسير يعد كل مره

  // // الميزة التااانيه
  // //  دعمل ريفيرنس للايليمنت
  // // عملت انمبت فيلد
  // // ط بدي اعمل عليه ريفيرنس
  // let myInput=useRef()
  // // بدي اعمله ريفيرنس ع الانمبت فيلد
  // //  في للاتربيوت  اتربيوت اسمه ريف
  // // رحت حطيت فيها اليوذ ريف
  // // هيك ربطلي ياهم مع بعض

  // // const [render, setRender] = useState(0)
  // useEffect(()=>{
  //       // لما تكون اليوذ ايفيكت الدبندسي تاعتها فاضيه يعني هيا بترندر بعد الريتيرن
  //       // هيسير هان انفنت لوب
  //       // setRender(render+1)
  //       // لانها لما اعمل تنفيذ لليوذ ايفيكت بعد الريتيرن هتضل تتكرر
  //       // مش هقدر اعرف عدد مرات الريندر عشان هتدخل في انفينت لوب
  //       // واذا اشتغلت بنفس الطريقه بس فاريبل مش يوذ ستيت مش هتتغير قيمته خالص لانو كل مره برجع للانيشل فاليو لانو فاريبل
  //       // فكل رندره بترجع تجيب الانيشل فاليو تاعت المتغير اليوذ استيت اله مميزتين
  //       // لما احط فيه فاليو بيحتفظ بالفاليو الي انحطت فيه
  //       // مش بيرجع للانيشل زي الفاريبل
  //       // لما اعمل ابديت بالستيت بيروح الستيت لحالها تعمل ابديت باليو اي
  //       // لما اعمل ابديت بتروح تعمل كول للريندر هاي الميزة التانيه لما يسير تعديل عليها

  //       render.current+=1;
  // })
  // useEffect(() => {
  //     //  بدي اشوف الماي انمبت جواه ايه
  //     // هنا هادي في مرحلة الديد ماونت
  //     // بدي اول ما يترندر الكمبوننت اروح جوا الكمبوننت ديد ماونت واطبعها لانو برا هتطلع ان ديفايند
  //     console.log(myInput);   // فيها الكرنت والكرنت بشير للانمبت عرفت امسك الانمبت فيلد
  //     //  بدي يروح يعمل للانمبت فوكس
  //     // اول ما ادخل الكمبوننت بيروح يعملي فوكس ع الانمبت فيلد
  //     myInput.current.focus()

  // }, [])

  // useMemo...............................
  const [counter2, setCounter2] = useState(0);
  const [counter3, setCounter3] = useState(0);
 
  // function checkCounter2Even(){
  //   // لاحظت انو هاي جملة الطباعه كمان لما رحت زودت بالكاونتر تلاته اشتغلت ونا اصلا عملالها الكول في الكاونتر تنين بس
  //   // انا عملت ابديت في الستيت فراحت عملت كول للفنكشن لانو الستيت عملت رندر لكل الكمبوننت 
  //   // فأنا بدي اقله خليك فاكر ما تشغل الفنكشن الا لما يسير ابديت في كاونتر تو بسسس 
  //   // دعمل امبورت لليوذ مينو 2>
  //   console.log("check even");
  //   return  counter2 %2 ===0;
  // }
   // useMemo................................
  //  لما كاونتر تنين يحصل عليه ابديت تشتغل الفنكشن
  //   (3)
   let x= useMemo(()=>{
          console.log("check even");
          return  counter2 %2 ===0;
   },[counter2 ])

  return (
    <>
      <div className="flex justify-center items-center flex-col">
        {/* <input ref={myInput} type='text'  className='w-full' /> */}
        {/* <h2>{render.current}</h2> */}
        <div className="text-center font-extrabold mb-3">counter1:{counter}</div>
        {/* <button onClick={()=>setCounter(counter+1)} className='bg-red-700 text-white px-3 mb-3'>+</button>
              <button onClick={()=>setCounter(counter-1)} className='bg-yellow-300 text-white px-3 '>-</button> */}
       
        {/* <h2>{x()? "even":"ood"}</h2> */}
        <h1>counter2:{counter2}</h1>
        <h2>counter3:{counter3}</h2>
        <button
          onClick={() => setCounter2(counter2 + 1)}
          className="bg-red-700 text-white px-3 mb-3"
        >
          +
        </button>
        <button
          onClick={() => setCounter3(counter3 + 1)}
          className="bg-cyan-700 text-white px-3 mb-3"
        >
          +
        </button>
      </div>
    </>
  );
}
